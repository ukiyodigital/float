{
  "extends": [
    "airbnb",
    "plugin:flowtype/recommended"
  ],
  "parser": "babel-eslint",
  "env": {
    "browser": true
  },
  "plugins": [
    "flowtype"
  ],
  "rules": {
    // Trailing commas in object literals are valid according to the ECMAScript 5 (and ECMAScript 3!) spec. However, IE8 (when not in IE8 document mode) and below will throw an error when it encounters trailing commas in JavaScript.
    "comma-dangle": ["error", "only-multiline"],
    // disable spacing after object curly
    "object-curly-spacing": ["off"],
    // line length
    "max-len": ["warn", {"code": 250, "tabWidth": 4, "ignoreComments": true, "ignoreUrls": true}],
    // Allow double and single quotes to be used for strings.  Go crazy.
    "quotes": ["error", "double"],
    // four space indent
    "indent": ["error", 4, {"SwitchCase": 1}],
    // Stroustrup brace style
    "brace-style": ["error", "stroustrup"],
    // decided to turn this off because it doesn't really make the syntax better. thoughts?
    "object-shorthand": ["off"],
    // some packages in devDependencies are used for testing
    "import/no-extraneous-dependencies": ["off"],
    // just chain calls reasonably, don't make it hard to read
    "newline-per-chained-call": ["off"],
    // disable to allow destructuring in params
    "object-curly-newline": ["off"],
    // destructuring is nice, but it could be hard to read sometimes
    "prefer-destructuring": ["off"],
    // disallow trailing whitespace at the end of lines
    "no-trailing-spaces": ["error", {"skipBlankLines": true}],
    // allow some sensible spacing between blocks
    "padded-blocks": ["off"],
    // allow parameter reassign
    "no-param-reassign": ["off"],

    // totally disagree with this rule.
    "jsx-a11y/no-static-element-interactions": ["off"],
    // not every label is associated with an HTML form input
    "jsx-a11y/label-has-for": ["off"],

    "jsx-a11y/label-has-associated-control": ["off"],

    // four space indent
    "react/jsx-indent": ["error", 4],
    "react/jsx-indent-props": ["warn", 4],
    // as much as I'm a fan of keeping react component methods organized, this rules isn't really making sense when
    // using mobx @observable class properties within a Component.
    "react/sort-comp": ["off"]
  }
}
