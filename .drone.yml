---
kind: pipeline
name: api-build

steps:
- name: api_test
  image: python:3.8.5
  environment:
    APP_ENV: test
    DJANGO_SETTINGS_MODULE: "settings.settings"
    DJANGO_DEBUG: True
    DJANGO_ALLOWED_HOSTS: "*"
    DJANGO_DB_HOST: db
    DJANGO_DB_NAME: float
    DJANGO_DB_USER: drone
    DJANGO_DB_PASSWORD: drone_pwd
    DJANGO_SECRET_KEY: "(｡◕‿‿◕｡)"
  commands:
    - apt-get update && apt-get install -y postgresql
    - db/wait-for-postgres.sh
    - cd api/
    - pip install -r pip-requirements/dev.txt
    - python src/manage.py test
- name: docker
  image: plugins/docker
  settings:
    repo: floatcms/api
    dockerfile: ./api/Dockerfile
    context: ./api
    build_args:
      - PIP_REQ=production
    environment:
      APP_ENV: production
      DJANGO_SETTINGS_MODULE: "settings.settings"
      DJANGO_DEBUG: True
      DJANGO_ALLOWED_HOSTS: "*"
      DJANGO_DB_HOST: db
      DJANGO_DB_NAME: float
      DJANGO_DB_USER: testuser
      DJANGO_DB_PASSWORD: testpassword
      DJANGO_SECRET_KEY: "(｡◕‿‿◕｡)"
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password

services:
- name: db
  image: postgres:12-alpine
  environment:
    POSTGRES_USER: drone
    POSTGRES_PASSWORD: drone_pwd
    POSTGRES_DB: float

---
kind: pipeline
name: ui-build

steps:
- name: docker
  image: plugins/docker
  settings:
    repo: floatcms/ui
    dockerfile: ./ui/Dockerfile
    context: ./ui
    build_args_from_env:
      - env_file:
        - ./ui/env/test.properties
        - ./env.properties
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
